# SSDLite with Mobilenet v3 large feature extractor.
# Trained on COCO14, initialized from scratch.
# TPU-compatible.
# Users should configure the fine_tune_checkpoint field in the train config as
# well as the label_map_path and input_path fields in the train_input_reader and
# eval_input_reader. Search for "PATH_TO_BE_CONFIGURED" to find the fields that
# should be configured.

model {
  ssd {
    inplace_batchnorm_update: true
    freeze_batchnorm: false
    num_classes: 2
    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 5.0
        width_scale: 5.0
      }
    }
    matcher {
      argmax_matcher {
        # matched_threshold: 0.5
        matched_threshold: 0.8
        # unmatched_threshold: 0.5
        unmatched_threshold: 0.2
        ignore_thresholds: false
        negatives_lower_than_unmatched: true
        force_match_for_each_row: true
        use_matmul_gather: true
      }
    }
    similarity_calculator {
      iou_similarity {
      }
    }
    encode_background_as_zeros: true
    anchor_generator {
      ssd_anchor_generator {
        num_layers: 6
        min_scale: 0.2
        max_scale: 0.95
        aspect_ratios: 1.0
        aspect_ratios: 2.0
        aspect_ratios: 0.5
        aspect_ratios: 3.0
        aspect_ratios: 0.3333
      }
    }
    image_resizer {
      fixed_shape_resizer {
        height: 416
        width: 416
      }
    }
    box_predictor {
      convolutional_box_predictor {
        min_depth: 0
        max_depth: 0
        num_layers_before_predictor: 0
        use_dropout: true
        dropout_keep_probability: 0.9
        kernel_size: 3
        use_depthwise: true
        box_code_size: 4
        apply_sigmoid_to_scores: false
        class_prediction_bias_init: -4.6
        conv_hyperparams {
          activation: RELU_6,
          regularizer {
            l2_regularizer {
              weight: 0.00002
            }
          }
          initializer {
            random_normal_initializer {
              stddev: 0.03
              mean: 0.0
            }
          }
          batch_norm {
            train: true,
            scale: true,
            center: true,
            decay: 0.97,
            epsilon: 0.001,
          }
        }
      }
    }
    feature_extractor {
      type: 'ssd_mobilenet_v3_small'
      min_depth: 16
      depth_multiplier: 1.0
      use_depthwise: true
      conv_hyperparams {
        activation: RELU_6,
        regularizer {
          l2_regularizer {
            weight: 0.00002
          }
        }
        initializer {
          truncated_normal_initializer {
            stddev: 0.05
            mean: 0.0
          }
        }
        batch_norm {
          train: true,
          scale: true,
          center: true,
          decay: 0.97,
          epsilon: 0.001,
        }
      }
      override_base_feature_extractor_hyperparams: true
    }
    loss {
      classification_loss {
        weighted_sigmoid_focal {
          alpha: 0.75,
          gamma: 2.0
        }
      }
      localization_loss {
        weighted_smooth_l1 {
          delta: 1.0
        }
      }
      classification_weight: 1.0
      localization_weight: 1.0
    }
    normalize_loss_by_num_matches: true
    normalize_loc_loss_by_codesize: true
    post_processing {
      batch_non_max_suppression {
        score_threshold: 1e-8
        iou_threshold: 0.1
        # max_detections_per_class: 100
        max_detections_per_class: 10
        # max_total_detections: 100
        max_total_detections: 10
        use_static_shapes: true
      }
      score_converter: SIGMOID
    }
  }
}

train_config: {
  batch_size: 32
  sync_replicas: true
  startup_delay_steps: 0
  replicas_to_aggregate: 32
  num_steps: 5000
  data_augmentation_options {
    random_horizontal_flip {
      keypoint_flip_permutation: 4
    }
    random_vertical_flip {
      keypoint_flip_permutation: 1
    }
    random_rgb_to_gray {
      probability: 0.5
    }
    random_rotation90 {
      keypoint_rot_permutation: 1
    }
  }
  data_augmentation_options {
    ssd_random_crop {
    }
  }
  optimizer {
    #momentum_optimizer: {
    #  learning_rate: {
    #   cosine_decay_learning_rate {
    #     learning_rate_base: 0.4
    #      total_steps: 5000
    #      warmup_learning_rate: 0.13333
    #      warmup_steps: 5000
    #    }
    #  }
    #  momentum_optimizer_value: 0.9
    #}
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate {
          initial_learning_rate: 0.004
        }
      }
    }
    use_moving_average: false
  }
  fine_tune_checkpoint: "/home/asilla/gender_detection/models/research/ssd_mobilenet_v3_small_coco_2020_01_14/model.ckpt"
  max_number_of_boxes: 100
  unpad_groundtruth_tensors: false
}

train_input_reader: {
  tf_record_input_reader {
    input_path: "/home/asilla/gender_detection/tfrecord/train.tfrecord"
  }
  label_map_path: "/home/asilla/gender_detection/label.pbtxt"
}

eval_config: {
  num_examples: 8000
  # Note: The below line limits the evaluation process to 10 evaluations.
  # Remove the below line to evaluate indefinitely.
  max_evals: 30
}

eval_input_reader: {
  tf_record_input_reader {
    input_path: "/home/asilla/gender_detection/tfrecord/train.tfrecord"
  }
  label_map_path: "/home/asilla/gender_detection/label.pbtxt"
  shuffle: false
  num_readers: 1
}

